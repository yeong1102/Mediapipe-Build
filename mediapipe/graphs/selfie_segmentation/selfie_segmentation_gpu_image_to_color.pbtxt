# MediaPipe graph that performs selfie segmentation with TensorFlow Lite on GPU.

# GPU buffer. (GpuBuffer)
input_stream: "input"

input_stream: "red"
input_stream: "green"
input_stream: "blue"

# Output image with rendered results. (GpuBuffer)
output_stream: "output"

node {
    calculator: "ImageFrameToGpuBufferCalculator"
    input_stream: "input"
    output_stream: "input_video"
}

# Throttles the images flowing downstream for flow control. It passes through
# the very first incoming image unaltered, and waits for downstream nodes
# (calculators and subgraphs) in the graph to finish their tasks before it
# passes through another image. All images that come in while waiting are
# dropped, limiting the number of in-flight images in most part of the graph to
# 1. This prevents the downstream nodes from queuing up incoming images and data
# excessively, which leads to increased latency and memory usage, unwanted in
# real-time mobile applications. It also eliminates unnecessarily computation,
# e.g., the output produced by a node may get dropped downstream if the
# subsequent nodes are still busy processing previous inputs.
node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"
  input_stream: "FINISHED:output_video"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"
}

# Subgraph that performs selfie segmentation.
node {
  calculator: "SelfieSegmentationGpu"
  input_stream: "IMAGE:throttled_input_video"
  output_stream: "SEGMENTATION_MASK:segmentation_mask"
}

node {
    calculator:"ColorSliderCalculator"
    input_stream: "red"
    input_stream: "green"
    input_stream: "blue"
    output_stream:"RGB_OUT:out_array"
}

node {
   calculator: "PacketClonerCalculator"
   input_stream: "out_array"
   input_stream: "throttled_input_video"
   output_stream:"out_array_2"
}

# Colors the selfie segmentation with the color specified in the option.
node {
  calculator: "RecolorCalculator"
  input_stream: "IMAGE_GPU:throttled_input_video"
  input_stream: "MASK_GPU:segmentation_mask"
  input_stream: "RGB_ARRAY:out_array_2"
  output_stream: "IMAGE_GPU:output_video"

  node_options: {
    [type.googleapis.com/mediapipe.RecolorCalculatorOptions] {
      color { r: 255 g: 0 b: 0 }
      mask_channel: RED
      invert_mask: true
      adjust_with_luminance: false
    }
  }
}

node {
    calculator: "GpuBufferToImageFrameCalculator"
    input_stream: "output_video"
    output_stream: "output"
}